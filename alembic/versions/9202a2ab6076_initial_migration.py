"""Initial migration

Revision ID: 9202a2ab6076
Revises: 
Create Date: 2025-06-28 21:53:20.632960

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9202a2ab6076'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('guilds',
    sa.Column('guild_id', sa.String(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('guild_id', name=op.f('pk_guilds'))
    )
    op.create_table('users',
    sa.Column('user_id', sa.String(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_users'))
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guilds.guild_id'], name=op.f('fk_projects_guild_id_guilds')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects'))
    )
    op.create_table('issues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_issue_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'CLOSED', name='issue_status_enum'), nullable=False),
    sa.Column('creator_id', sa.String(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.user_id'], name=op.f('fk_issues_creator_id_users')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_issues_project_id_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_issues'))
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_tags_project_id_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags'))
    )
    op.create_table('issue_assignees',
    sa.Column('issue_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issues.id'], name=op.f('fk_issue_assignees_issue_id_issues')),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_issue_assignees_user_id_users')),
    sa.PrimaryKeyConstraint('issue_id', 'user_id', name=op.f('pk_issue_assignees'))
    )
    op.create_table('issue_tags',
    sa.Column('issue_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issues.id'], name=op.f('fk_issue_tags_issue_id_issues')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_issue_tags_tag_id_tags')),
    sa.PrimaryKeyConstraint('issue_id', 'tag_id', name=op.f('pk_issue_tags'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('issue_tags')
    op.drop_table('issue_assignees')
    op.drop_table('tags')
    op.drop_table('issues')
    op.drop_table('projects')
    op.drop_table('users')
    op.drop_table('guilds')
    # ### end Alembic commands ###
